- name: Update apt package index
  ansible.builtin.apt:
    update_cache: yes

- name: Install packages required for Docker
  ansible.builtin.apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common
    state: present

- name: Add Docker GPG key
  ansible.builtin.apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: Add Docker repository
  ansible.builtin.apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
    state: present

- name: Update apt package index
  ansible.builtin.apt:
    update_cache: yes

- name: Install docker and docker compose packages
  ansible.builtin.apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    state: present

- name: Ensure the group 'docker' exists
  ansible.builtin.group:
    name: docker
    state: present

- name: Add user to the 'docker' group
  ansible.builtin.user:
    name: "{{ user }}"
    groups: docker
    append: yes

- name: Check if {{ docker_services_dir }} exists
  ansible.builtin.stat:
    path: "{{ docker_services_dir }}"
  register: docker_repo_stat

- name: Create {{ docker_services_dir }}
  file:
    path: "{{ docker_services_dir }}"
    state: directory
    owner: "{{ user }}"
    group: "{{ user }}"
    mode: '0700'
  when: not docker_repo_stat.stat.exists

- name: Cloning {{ docker_services_url }} to {{ docker_services_dir }}
  ansible.builtin.git:
    repo: "{{ docker_services_url }}"
    dest: "{{ docker_services_dir }}"
    key_file: "/home/{{ user }}/.ssh/id_ed25519"
    accept_hostkey: yes
    update: yes
    clone: yes
    force: yes
  become: false
  when: not docker_repo_stat.stat.exists

- name: Adjusting permissions of {{ docker_services_dir }}
  file:
    path: "{{ docker_services_dir }}"
    state: directory
    owner: "{{ user }}"
    group: "{{ user }}"
    recurse: yes
    mode: '0700'
  when: not docker_repo_stat.stat.exists

