pki:
  # The CAs that are accepted by this node. Must contain one or more certificates created by 'nebula-cert ca'
  ca: {{ nebula_install_dir}}/ca.crt
  cert: {{ nebula_install_dir}}/host.crt
  key: {{ nebula_install_dir}}/host.key

  # blocklist is a list of certificate fingerprints that we will refuse to talk to
  #blocklist:
  #  - c99d4e650533b92061b09918e838a5a0a6aaee21eed1d12fd937682865936c72
  # disconnect_invalid is a toggle to force a client to be disconnected if the certificate is expired or invalid.

static_host_map:
  "10.10.0.1": ["{{ nebula_lighthouse_1 }}:{{ nebula_port }}"]
  "10.10.0.2": ["{{ nebula_lighthouse_2 }}:{{ nebula_port }}"]

lighthouse:
  am_lighthouse: false
  interval: 60
  
  hosts:
    - "10.10.0.1"
    - "10.10.0.2"

listen:
  # To listen on both any ipv4 and ipv6 use "::"
  host: 0.0.0.0
  port: {{ nebula_port }}

punchy:
  # Continues to punch inbound/outbound at a regular interval to avoid expiration of firewall nat mappings
  punch: true

relay:
  # Set am_relay to true to permit other hosts to list my IP in their relays config. Default false.
  am_relay: false

  # Set use_relays to false to prevent this instance from attempting to establish connections through relays.
  # default true
  use_relays: true

# Configure the private interface. Note: addr is baked into the nebula certificate
tun:
  # When tun is disabled, a lighthouse can be started without a local tun interface (and therefore without root)
  disabled: false

  # Name of the device. If not set, a default will be chosen by the OS.
  # For macOS: if set, must be in the form `utun[0-9]+`.
  # For NetBSD: Required to be set, must be in the form `tun[0-9]+`
  dev: {{ nebula_tunnel_name }}

  # Toggles forwarding of local broadcast packets, the address of which depends on the ip/mask encoded in pki.cert
  drop_local_broadcast: false

  # Toggles forwarding of multicast packets
  drop_multicast: false

  # Sets the transmit queue length, if you notice lots of transmit drops on the tun it may help to raise this number. Default is 500
  tx_queue: 500

  # Default MTU for every packet, safe setting is (and the default) 1300 for internet based traffic
  mtu: 1300

  # Route based MTU overrides, you have known vpn ip paths that can support larger MTUs you can increase/decrease them here
  routes:
    #- mtu: 8800
    #  route: 10.0.0.0/16

  
  unsafe_routes:

    # Configure logging level
logging:
  # panic, fatal, error, warning, info, or debug. Default is info
  level: {{ nebula_log_level }}

  # json or text formats currently available. Default is text
  format: text

# Nebula security group configuration
firewall:
  # Action to take when a packet is not allowed by the firewall rules.
  # Can be one of:
  #   `drop` (default): silently drop the packet.
  #   `reject`: send a reject reply.
  #     - For TCP, this will be a RST "Connection Reset" packet.
  #     - For other protocols, this will be an ICMP port unreachable packet.
  outbound_action: drop
  inbound_action: drop

  conntrack:
    tcp_timeout: 12m
    udp_timeout: 3m
    default_timeout: 10m

  outbound:
    # Allow all outbound traffic from this node
    - port: any
      proto: any
      host: any

  inbound:

    - port: {{ ssh_port | default('22') }}
      proto: tcp
      group: acl:admin
