- name: Check if {{ nebula_install_dir }}/config.yaml
  ansible.builtin.stat:
    path: "{{ nebula_install_dir }}/config.yaml"
  register: host_config_stat

- name: Backing up {{ nebula_install_dir }}/config.yaml
  ansible.builtin.copy:
    src: "{{ nebula_install_dir }}/config.yaml"
    dest: "{{ nebula_install_dir }}/config-backup.yaml"
  remote_src: true
  when: host_config_stat.stat.exists

- name: Deploy nebula service configuration file
  ansible.builtin.template:
    src: nebula-service-config.j2
    dest: "{{ nebula_install_dir }}/config.yaml"
    owner: root
    group: "{{ nebula_user }}"
    mode: '0540'
  when: not nebula_is_lighthouse

- name: Deploy nebula lighthouse configuration
  ansible.builtin.template:
    src: nebula-lighthouse-config.j2
    dest: "{{ nebula_install_dir }}/config.yaml"
    owner: root
    group: "{{ nebula_user }}"
    mode: '0540'
  when: nebula_is_lighthouse

- name: Add inbound rules to the YAML configuration
  nebula_inbound_policy:
    path: "{{ nebula_install_dir }}/config.yaml"
    rules: "{{ nebula_inbound_rules }}"

- name: Check if Nebula CA Certificate already downloaded
  ansible.builtin.stat:
    path: "./ca.crt"
  register: nebula_ca_crt

- name: Downloading Nebula CA Certificate
  bitwarden_download_attachment:
    name: "NEBULA_CA"
    filename: "ca.crt"
    file_path: "./ca.crt"
  become: false
  delegate_to: localhost
  when: not nebula_ca_crt.stat.exists

- name: Installing Nebula CA Certificate
  ansible.builtin.copy:
    src: "./ca.crt"
    dest: "{{ nebula_install_dir }}/ca.crt"
    owner: "root"
    group: "{{ nebula_user }}"
    mode: "0540"

