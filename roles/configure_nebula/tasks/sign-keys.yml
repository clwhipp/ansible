- name: Delete nebula working directory on ansible host
  file:
    path: "./.nebula"
    state: absent
  delegate_to: localhost
  become: false

- name: Create nebula working directory on ansible host
  ansible.builtin.file:
    path: ".nebula"
    state: directory
    mode: '0700'
  delegate_to: localhost
  become: false

- name: Download host public key to ansible host
  ansible.builtin.fetch:
    src: "/home/{{ user }}/Documents/exports/{{ inventory_hostname }}-host.pub"
    dest: "./.nebula/{{ inventory_hostname }}-host.pub"
    flat: yes

- name: Issue device certificate for {{ nebula_sign_profile }}
  command: npki issue device --certs_dir "{{ playbook_dir }}/certificates/nebula" --public "./.nebula/{{ inventory_hostname }}-host.pub" --cert_out ".nebula/{{ nebula_sign_profile }}.crt" "{{ nebula_sign_profile }}"
  delegate_to: localhost
  become: false
  no_log: true

- name: Check if {{ nebula_install_dir }}/host.crt
  ansible.builtin.stat:
    path: "{{ nebula_install_dir }}/host.crt"
  register: host_cert_stat

- name: Backing up {{ nebula_install_dir }}/host.crt
  ansible.builtin.copy:
    src: "{{ nebula_install_dir }}/host.crt"
    dest: "{{ nebula_install_dir }}/host-backup.crt"
    remote_src: true
  when: host_cert_stat.stat.exists

- name: Upload host certificate to host
  ansible.builtin.copy:
    src: ".nebula/{{ nebula_sign_profile }}.crt"
    dest: "{{ nebula_install_dir }}/host.crt"
    owner: "root"
    group: "{{ nebula_user }}"
    mode: '0750'

- name: Delete nebula directory
  file:
    path: "./.nebula"
    state: absent
  delegate_to: localhost
  become: false
