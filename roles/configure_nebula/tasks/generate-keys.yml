- name: Check if host key exists
  ansible.builtin.stat:
    path: "{{ nebula_install_dir }}/host.key"
  register: nebula_key_generated

- name: Generate nebula host keys
  ansible.builtin.command:
    cmd: nebula-cert keygen -out-key {{ nebula_install_dir }}/host.key -out-pub {{ nebula_install_dir }}/host.pub
  when: not nebula_key_generated.stat.exists

- name: Check if host private key exists
  ansible.builtin.stat:
    path: "{{ nebula_install_dir }}/host.key"
  register: host_key_stat

- name: Fail if host private key does not exist
  ansible.builtin.fail:
    msg: "The host private key file does not exist."
  when: not host_key_stat.stat.exists

- name: Ensure host private key has correct permissions (if it exists)
  ansible.builtin.file:
    path: "{{ nebula_install_dir }}/host.key"
    state: file
    owner: "root"
    group: "{{ nebula_user }}"
    mode: '0550'
  when: host_key_stat.stat.exists

- name: Check if host public key exists
  ansible.builtin.stat:
    path: "{{ nebula_install_dir }}/host.pub"
  register: host_pubkey_stat

- name: Fail if host public key does not exist
  ansible.builtin.fail:
    msg: "The host public key file does not exist."
  when: not host_pubkey_stat.stat.exists

- name: Ensure host public key has correct permissions (if it exists)
  ansible.builtin.file:
    path: "{{ nebula_install_dir }}/host.pub"
    state: file
    owner: "root"
    group: "{{ nebula_user }}"
    mode: '0550'
  when: host_pubkey_stat.stat.exists

- name: Ensure {{ user }}/Documents/exports exists
  file:
    path: "/home/{{ user }}/Documents/exports"
    state: directory
    owner: "{{ user }}"
    group: "{{ user }}"
    mode: '0700'

- name: Make host.pub available for download
  ansible.builtin.copy:
    src: "{{ nebula_install_dir }}/host.pub"
    dest: "/home/{{ user }}/Documents/exports/{{ inventory_hostname }}-host.pub"
    owner: "{{ user }}"
    group: "{{ user }}"
    mode: '0700'
    remote_src: true
