- name: Ensure {{ tls_certs_dir }} exists
  file:
    path: "{{ tls_certs_dir }}"
    state: directory
    owner: "root"
    group: "{{ user }}"
    mode: '0750'

- name: Deploy TLS CSR Configuration
  ansible.builtin.template:
    src: csr-config.j2
    dest: "{{ tls_certs_dir }}/{{ svc_domain }}-config.txt"
    owner: root
    group: root
    mode: '0700'

- name: Check if TLS private key in place
  ansible.builtin.stat:
    path: "{{ tls_certs_dir }}/{{ svc_domain }}-tls.key"
  register: key_generated

- name: Generate a CSR for TLS connection
  ansible.builtin.command:
    cmd: openssl req -new -newkey rsa:2048 -nodes -keyout "{{ tls_certs_dir }}/{{ svc_domain }}-tls.key" -out "{{ tls_certs_dir }}/{{ svc_domain }}-tls.csr" -config "{{ tls_certs_dir }}/{{ svc_domain }}-config.txt"
    creates: "{{ tls_certs_dir }}/{{ svc_domain }}-tls.csr"
  args:
    creates: "{{ tls_certs_dir }}/{{ svc_domain }}-tls.csr"
  when: not key_generated.stat.exists

- name: Ensure permissions on {{ tls_certs_dir }}/{{ svc_domain }}-tls.key
  file:
    path: "{{ tls_certs_dir }}/{{ svc_domain }}-tls.key"
    state: file
    owner: "root"
    group: "{{ svc_account }}"
    mode: '0750'

- name: Download {{ tls_certs_dir }}/{{ svc_domain }}-tls.csr for signing
  ansible.builtin.fetch:
    src: "{{ tls_certs_dir }}/{{ svc_domain }}-tls.csr"
    dest: ".pki/{{ svc_domain }}-tls.csr"
    flat: yes

- name: Generate TLS Extensions
  ansible.builtin.template:
    src: tls-ext.j2
    dest: ".pki/{{ svc_domain }}-tls-ext.txt"
  delegate_to: localhost
  become: false

- name: Download Domain CA files from Bitwarden
  bitwarden_download_attachments:
    name: "DOMAIN_CA"
    dir_path: ".pki"
  delegate_to: localhost
  become: false

- name: Issue TLS certificate for {{ svc_domain }}
  openssl_sign:
    csr_path: ".pki/{{ svc_domain }}-tls.csr"
    ca_key: ".pki/pki.pem"
    ca_crt: ".pki/pki.crt"
    tls_ext: ".pki/{{ svc_domain }}-tls-ext.txt"
    out_crt: "{{ svc_domain }}.crt"
  delegate_to: localhost
  become: false
  no_log: true
  
- name: Delete pki directory
  file:
    path: "./.pki"
    state: absent
  delegate_to: localhost

- name: Upload {{ svc_domain }}.crt
  ansible.builtin.copy:
    src: "{{ svc_domain }}.crt"
    dest: "{{ tls_certs_dir }}/{{ svc_domain }}-tls.crt"
    owner: "root"
    group: "{{ svc_account }}"
    mode: '0750'

- name: Delete {{ svc_domain }}.crt
  file:
    path: "{{ svc_domain }}.crt"
    state: absent
  delegate_to: localhost
