- name: Ensure {{ root_install_dir }} exists
  file:
    path: "{{ root_install_dir }}"
    state: directory
    owner: "root"
    group: "{{ user }}"
    mode: '0750'

- name: Ensure Vaultwarden accounts exist
  ansible.builtin.user:
    name: "{{ item.name }}"
    uid: "{{ item.uid }}"
    shell: "{{ item.shell | default(omit) }}"
    create_home: false
    state: present
  loop: "{{ vaultwarden_linux_accounts }}"

- name: Ensure data directories exist for vaultwarden
  file:
    path: "{{ item.location }}"
    state: directory
    owner: "{{ item.owner }}"
    group: "{{ item.owner }}"
    mode: "{{ item.mode }}"
  loop: "{{ vaultwarden_data_mounts }}"

- name: Deploy Vaultwarden .env file into environment
  ansible.builtin.template:
    src: "docker-env-template.j2"
    dest: "{{ docker_services_dir }}/bw/.env"
    owner: "{{ user }}"
    group: "{{ user }}"
    mode: '0400'

- name: Enable Vaultwarden borg backups
  include_role:
    name: configure_borg_backup
    public: true
  vars:
    borg_src_dir: "{{ data_dir }}/bitwarden"
    borg_repo_dir: "{{ backup_dir }}/borg-bitwarden"
    borg_bws_secret_uid: 
    borg_script_loc: "{{ scripts_dir }}/backup-borg-vaultwarden.sh"
    idrive_e2_target: "test_e2_url"
    idrive_e2_bucket: "vaultwarden-bucket"

- name: Deploy Vaultwarden Let's Encrypt
  include_role:
    name: configure_lets_encrypt_cloudflare
    public: true
  vars:
    account: "{{ svc_account }}"
    cert_domain: "{{ svc_domain }}"
