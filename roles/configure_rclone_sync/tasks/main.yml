- name: Install rclone dependencies
  ansible.builtin.apt:
    name:
      - unzip
    state: present

- name: Check if rclone already installed
  stat:
    path: /usr/bin/rclone
  register: rclone_stat

- name: Download the latest rclone package
  get_url:
    url: "https://downloads.rclone.org/rclone-current-linux-amd64.zip"
    dest: "/home/{{ user }}/workspace/rclone-latest.zip"
    mode: '0600'
  when: not rclone_stat.stat.exists

- name: Create temporary directory
  file:
    path: "/home/{{ user }}/workspace/rclone_setup"
    state: directory
  when: not rclone_stat.stat.exists

- name: Unzip the rclone package
  unarchive:
    src: "/home/{{ user }}/workspace/rclone-latest.zip"
    dest: "/home/{{ user }}/workspace/rclone_setup"
    owner: "{{ user }}"
    group: "{{ user }}"
    mode: "755"
    remote_src: yes
  when: not rclone_stat.stat.exists

- name: Find the sub-directory created after unzipping
  find:
    paths: "/home/{{ user }}/workspace/rclone_setup"
    file_type: directory
    depth: 1
  register: subdir
  when: not rclone_stat.stat.exists

- name: Set fact for sub-directory name
  set_fact:
    subdir_name: "{{ subdir.files[0].path }}"
  when: not rclone_stat.stat.exists

- name: Copy rclone binary into /usr/bin
  copy:
    src: "{{ subdir_name }}/rclone"
    dest: "/usr/bin/rclone"
    owner: "root"
    group: "root"
    mode: "755"
    remote_src: yes
  when: not rclone_stat.stat.exists

- name: Delete a directory
  file:
    path: "/home/{{ user }}/workspace/rclone_setup"
    state: absent
  when: not rclone_stat.stat.exists

- name: Adding {{ idrive_e2_target }} credentials into rclone configuration
  rclone_config:
    target: "{{ idrive_e2_target }}"
    access_key_id: "{{ idrive_e2_access_key_id }}"
    secret_access_key: "{{ idrive_e2_secret_access_key }}"

- name: Ensure rclone configuration permissions are correct
  file:
    path: "/root/.config/rclone/rclone.conf"
    state: file
    owner: "root"
    group: "root"
    mode: '0700'
